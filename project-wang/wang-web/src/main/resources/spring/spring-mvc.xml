<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

<!-- 添加注解驱动 -->
	<!-- <mvc:annotation-driven />
	<mvc:default-servlet-handler /> -->

    
	<!-- 启动spring注解并扫描指定包 -->
	<context:component-scan base-package="com.wang.controller,com.dowin.base"></context:component-scan>

	<!-- spring容器中加载配置文件 begin -->
	<bean id="propertyForApi"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!--忽略不可解析的 Placeholder -->
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:conf-web.properties</value>
			</list>
		</property>
	</bean>
	<!-- spring容器中加载配置文件 end -->
	
	<!-- spring日志拦截器 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<bean class="com.wang.common.log.LogControllerAspect" />

	<!-- 自定义异常拦截器 -->
	<bean class="com.wang.common.exception.CustomExceptionInterceptor" />
	
	<!-- Swagger Api接口 -->
	 <bean name="applicationSwaggerConfig" class="com.wang.swagger.SwaggerConfig"/>
	
	<!-- 请求头拦截器 -->
    <!-- <bean id="reqHeadInterceptor" class="com.wang.common.web.interceptor.RequestHeadInterceptor"/> -->

    <!-- 登录验证拦截器拦截以.auth为后缀的方法 -->
	<!-- <mvc:interceptors> -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/app/*.auth/**" />
			<bean class="com.dowin.base.AuthCheckInteceptor" />
		</mvc:interceptor> -->
		<!-- <ref bean="reqHeadInterceptor"/> -->  
	<!-- </mvc:interceptors> -->

	<!-- 静态资源映射 begin -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	
	 <!-- Enables swgger ui-->
   <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
	<!-- 静态资源映射 end -->

	<!-- 配置页面访问前缀和后缀begin -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 配置页面访问前缀和后缀end -->

	<!-- 文件上传配置 BEGIN -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760" />
	</bean>
	<!-- 文件上传配置 END -->


	<!-- 配置内容协商视图解析 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
		   <!-- 配置Jackson支持 -->
		   <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
			<!-- 配置Fastjson支持 -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<list>
						<value>WriteMapNullValue</value>
						<value>QuoteFieldNames</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	

</beans>  